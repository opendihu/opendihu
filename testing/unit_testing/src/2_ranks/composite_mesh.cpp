#include <Python.h> // this has to be the first included header

#include <iostream>
#include <cstdlib>
#include <fstream>
#include <cassert>
#include <cmath>

#include "gtest/gtest.h"
#include "opendihu.h"
#include "arg.h"
#include "../utility.h"
#include "mesh/face_t.h"
#include "function_space/function_space.h"

TEST(CompositeTest, Case0) {
  // run serial problem
  std::string pythonConfig = R"(

meshes = {
  "submesh0": {
    "nElements": [2, 3],
    "inputMeshIsGlobal": True,
    "physicalExtent": [2.0, 3.0],
  },
  "submesh1": {
    "nElements": [1, 4],
    "inputMeshIsGlobal": True,
    "physicalExtent": [2.0, 4.0],
    "physicalOffset": [2.0, 0.0],
  },
}

config = {
  "Meshes": meshes,
  "FiniteElementMethod": {
    "inputMeshIsGlobal": True,

    "meshName": ["submesh0", "submesh1"],
  },
}

print(config)

)";

  DihuContext settings(argc, argv, pythonConfig);

  typedef SpatialDiscretization::FiniteElementMethod<
      Mesh::CompositeOfDimension<2>, BasisFunction::LagrangeOfOrder<2>,
      Quadrature::Gauss<1>, Equation::None>
      ProblemType;
  ProblemType problem(settings);

  problem.initialize();

  std::string stringRespresentation =
      problem.data().functionSpace()->meshPartition()->getString();
  std::cout << "stringRespresentation: \n" << stringRespresentation;

  std::string reference;

  if (DihuContext::ownRankNoCommWorld() == 0) {
    reference =
        "CompositeMesh, nSubMeshes: 2, removedSharedNodes: [, [1,0] -> [0,4] "
        "[1,3] -> [0,9] [1,6] -> [0,14] [1,9] -> [0,19] [1,12] -> [0,24] , ], "
        "nElementsLocal: 6, nElementsGlobal: 10, elementNoGlobalBegin: 0, "
        "nNodesSharedLocal: 4, nGhostNodesSharedLocal: 1, "
        "nRemovedNodesNonGhost: [0, 4, ], nNonDuplicateNodesWithoutGhosts: "
        "[20, 8, ], nNodesLocalWithoutGhosts: 28, nNodesLocalWithGhosts: 35, "
        "nNodesGlobal: 55, nonDuplicateNodeNoGlobalBegin: 0, "
        "meshAndNodeNoLocalToNodeNoNonDuplicateGlobal: "
        "[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,31,32,],["
        "-1,20,21,-1,22,23,-1,24,25,-1,26,27,-1,43,44,],], "
        "meshAndNodeNoLocalToNodeNoNonDuplicateLocal: "
        "[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,31,32,],["
        "-1,20,21,-1,22,23,-1,24,25,-1,26,27,-1,33,34,],], isDuplicate: "
        "[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],[1,0,0,1,0,0,1,"
        "0,0,1,0,0,1,0,0,],], nodeNoNonDuplicateLocalToMeshAndDuplicateLocal: "
        "[<0,0>,<0,1>,<0,2>,<0,3>,<0,4>,<0,5>,<0,6>,<0,7>,<0,8>,<0,9>,<0,10>,<"
        "0,11>,<0,12>,<0,13>,<0,14>,<0,15>,<0,16>,<0,17>,<0,18>,<0,19>,<1,1>,<"
        "1,2>,<1,4>,<1,5>,<1,7>,<1,8>,<1,10>,<1,11>,<0,20>,<0,21>,<0,22>,<0,23>"
        ",<0,24>,<1,13>,<1,14>,], nonDuplicateGhostNodeNosGlobal: "
        "[28,29,30,31,32,43,44,], onlyNodalDofLocalNos: "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,], ghostDofNosGlobalPetsc: [28,29,30,31,32,43,44,], "
        "nElementsLocal(): 6, nElementsGlobal(): 10, nDofsLocalWithGhosts(): "
        "35, nDofsLocalWithoutGhosts(): 28, nDofsGlobal(): 55, "
        "nNodesLocalWithGhosts(): 35, nNodesLocalWithoutGhosts(): 28, "
        "nNodesGlobal(): 55, beginNodeGlobalPetsc(): 0, dofNosLocal(true): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,], dofNosLocal(false): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,29,30,31,32,33,34,], ghostDofNosGlobalPetsc(): "
        "[28,29,30,31,32,43,44,], getElementNoGlobalNatural: 0->0 1->1 2->2 "
        "3->3 4->6 5->7 , getNodeNoGlobalPetsc: 0->0 1->1 2->2 3->3 4->4 5->5 "
        "6->6 7->7 8->8 9->9 10->10 11->11 12->12 13->13 14->14 15->15 16->16 "
        "17->17 18->18 19->19 20->20 21->21 22->22 23->23 24->24 25->25 26->26 "
        "27->27 28->28 29->29 30->30 31->31 32->32 33->43 34->44 , "
        "getNodeNoGlobalNatural: 0,0->0 0,1->1 0,2->2 0,3->5 0,4->6 0,5->7 "
        "0,6->10 0,7->11 0,8->12 1,0->2 1,1->3 1,2->4 1,3->7 1,4->8 1,5->9 "
        "1,6->12 1,7->13 1,8->14 2,0->10 2,1->11 2,2->12 2,3->15 2,4->16 "
        "2,5->17 2,6->20 2,7->21 2,8->22 3,0->12 3,1->13 3,2->14 3,3->17 "
        "3,4->18 3,5->19 3,6->22 3,7->23 3,8->24 4,0->35 4,1->36 4,2->37 "
        "4,3->38 4,4->39 4,5->40 4,6->41 4,7->42 4,8->43 5,0->41 5,1->42 "
        "5,2->43 5,3->44 5,4->45 5,5->46 5,6->47 5,7->48 5,8->49 , "
        "getDofNoGlobalPetsc: "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,29,30,31,32,43,44,], getDofNoGlobalPetsc: 0->0 1->1 2->2 "
        "3->3 4->4 5->5 6->6 7->7 8->8 9->9 10->10 11->11 12->12 13->13 14->14 "
        "15->15 16->16 17->17 18->18 19->19 20->20 21->21 22->22 23->23 24->24 "
        "25->25 26->26 27->27 28->28 29->29 30->30 31->31 32->32 33->43 34->44 "
        ", getElementNoLocal: 0->0->1 1->1->1 2->2->1 3->3->1 4->4->1 5->5->1 "
        "6->-1->0 7->-1->0 8->-1->0 9->-1->0 , getNodeNoLocal: 0->0->1 1->1->1 "
        "2->2->1 3->3->1 4->4->1 5->5->1 6->6->1 7->7->1 8->8->1 9->9->1 "
        "10->10->1 11->11->1 12->12->1 13->13->1 14->14->1 15->15->1 16->16->1 "
        "17->17->1 18->18->1 19->19->1 20->20->1 21->21->1 22->22->1 23->23->1 "
        "24->24->1 25->25->1 26->26->1 27->27->1 28->28->0 29->29->0 30->30->0 "
        "31->31->0 32->32->0 33->33->0 34->34->0 35->35->0 36->36->0 37->37->0 "
        "38->38->0 39->39->0 40->40->0 41->41->0 42->42->0 43->43->0 44->44->0 "
        "45->45->0 46->46->0 47->47->0 48->48->0 49->49->0 50->50->0 51->51->0 "
        "52->52->0 53->53->0 54->54->0 , getDofNoLocal: 0->0->1 1->1->1 "
        "2->2->1 3->3->1 4->4->1 5->5->1 6->6->1 7->7->1 8->8->1 9->9->1 "
        "10->10->1 11->11->1 12->12->1 13->13->1 14->14->1 15->15->1 16->16->1 "
        "17->17->1 18->18->1 19->19->1 20->20->1 21->21->1 22->22->1 23->23->1 "
        "24->24->1 25->25->1 26->26->1 27->27->1 28->28->0 29->29->0 30->30->0 "
        "31->31->0 32->32->0 33->33->0 34->34->0 35->35->0 36->36->0 37->37->0 "
        "38->38->0 39->39->0 40->40->0 41->41->0 42->42->0 43->43->0 44->44->0 "
        "45->45->0 46->46->0 47->47->0 48->48->0 49->49->0 50->50->0 51->51->0 "
        "52->52->0 53->53->0 54->54->0 , extractLocalNodesWithoutGhosts: "
        "[0,20,21,3,22,23,6,24,25,9,26,27,12,13,14,15,16,17,18,19,0,0,0,0,0,0,"
        "0,0,], extractLocalDofsWithoutGhosts: "
        "[0,20,21,3,22,23,6,24,25,9,26,27,12,13,14,15,16,17,18,19,0,0,0,0,0,0,"
        "0,0,], getSubMeshNoAndElementNoLocal: 0->0,0 1->0,1 2->0,2 3->0,3 "
        "4->1,0 5->1,1 , getSubMeshNoAndNodeNoLocal: 0->0,0 1->0,1 2->0,2 "
        "3->0,3 4->0,4 5->0,5 6->0,6 7->0,7 8->0,8 9->0,9 10->0,10 11->0,11 "
        "12->0,12 13->0,13 14->0,14 15->0,15 16->0,16 17->0,17 18->0,18 "
        "19->0,19 20->1,1 21->1,2 22->1,4 23->1,5 24->1,7 25->1,8 26->1,10 "
        "27->1,11 28->0,20 29->0,21 30->0,22 31->0,23 32->0,24 33->1,12 "
        "34->1,13 , getSubMeshesWithNodes: 0->[<0,0> ] 1->[<0,1> ] 2->[<0,2> ] "
        "3->[<0,3> ] 4->[<0,4> <1,0> ] 5->[<0,5> ] 6->[<0,6> ] 7->[<0,7> ] "
        "8->[<0,8> ] 9->[<0,9> <1,3> ] 10->[<0,10> ] 11->[<0,11> ] 12->[<0,12> "
        "] 13->[<0,13> ] 14->[<0,14> <1,6> ] 15->[<0,15> ] 16->[<0,16> ] "
        "17->[<0,17> ] 18->[<0,18> ] 19->[<0,19> <1,9> ] 20->[<1,1> ] "
        "21->[<1,2> ] 22->[<1,4> ] 23->[<1,5> ] 24->[<1,7> ] 25->[<1,8> ] "
        "26->[<1,10> ] 27->[<1,11> ] 28->[<0,20> ] 29->[<0,21> ] 30->[<0,22> ] "
        "31->[<0,23> ] 32->[<0,24> <1,12> ] 33->[<1,12> ] 34->[<1,13> ] ";
  } else {
    reference =
        "CompositeMesh, nSubMeshes: 2, removedSharedNodes: [, [1,0] -> [0,4] "
        "[1,3] -> [0,9] [1,6] -> [0,14] , ], nElementsLocal: 4, "
        "nElementsGlobal: 10, elementNoGlobalBegin: 6, nNodesSharedLocal: 3, "
        "nGhostNodesSharedLocal: 0, nRemovedNodesNonGhost: [0, 3, ], "
        "nNonDuplicateNodesWithoutGhosts: [15, 12, ], "
        "nNodesLocalWithoutGhosts: 27, nNodesLocalWithGhosts: 27, "
        "nNodesGlobal: 55, nonDuplicateNodeNoGlobalBegin: 28, "
        "meshAndNodeNoLocalToNodeNoNonDuplicateGlobal: "
        "[[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[-1,43,44,-1,45,46,-"
        "1,47,48,49,50,51,52,53,54,],], "
        "meshAndNodeNoLocalToNodeNoNonDuplicateLocal: "
        "[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,],[-1,15,16,-1,17,18,-1,19,20,21,"
        "22,23,24,25,26,],], isDuplicate: "
        "[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],[1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,],], "
        "nodeNoNonDuplicateLocalToMeshAndDuplicateLocal: "
        "[<0,0>,<0,1>,<0,2>,<0,3>,<0,4>,<0,5>,<0,6>,<0,7>,<0,8>,<0,9>,<0,10>,<"
        "0,11>,<0,12>,<0,13>,<0,14>,<1,1>,<1,2>,<1,4>,<1,5>,<1,7>,<1,8>,<1,9>,<"
        "1,10>,<1,11>,<1,12>,<1,13>,<1,14>,], nonDuplicateGhostNodeNosGlobal: "
        "[], onlyNodalDofLocalNos: "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,], ghostDofNosGlobalPetsc: [], nElementsLocal(): 4, "
        "nElementsGlobal(): 10, nDofsLocalWithGhosts(): 27, "
        "nDofsLocalWithoutGhosts(): 27, nDofsGlobal(): 55, "
        "nNodesLocalWithGhosts(): 27, nNodesLocalWithoutGhosts(): 27, "
        "nNodesGlobal(): 55, beginNodeGlobalPetsc(): 28, dofNosLocal(true): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,], dofNosLocal(false): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,], ghostDofNosGlobalPetsc(): [], getElementNoGlobalNatural: 0->4 "
        "1->5 2->8 3->9 , getNodeNoGlobalPetsc: 0->28 1->29 2->30 3->31 4->32 "
        "5->33 6->34 7->35 8->36 9->37 10->38 11->39 12->40 13->41 14->42 "
        "15->43 16->44 17->45 18->46 19->47 20->48 21->49 22->50 23->51 24->52 "
        "25->53 26->54 , getNodeNoGlobalNatural: 0,0->20 0,1->21 0,2->22 "
        "0,3->25 0,4->26 0,5->27 0,6->30 0,7->31 0,8->32 1,0->22 1,1->23 "
        "1,2->24 1,3->27 1,4->28 1,5->29 1,6->32 1,7->33 1,8->34 2,0->47 "
        "2,1->48 2,2->49 2,3->50 2,4->51 2,5->52 2,6->53 2,7->54 2,8->55 "
        "3,0->53 3,1->54 3,2->55 3,3->56 3,4->57 3,5->58 3,6->59 3,7->60 "
        "3,8->61 , getDofNoGlobalPetsc: "
        "[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,"
        "51,52,53,54,], getDofNoGlobalPetsc: 0->28 1->29 2->30 3->31 4->32 "
        "5->33 6->34 7->35 8->36 9->37 10->38 11->39 12->40 13->41 14->42 "
        "15->43 16->44 17->45 18->46 19->47 20->48 21->49 22->50 23->51 24->52 "
        "25->53 26->54 , getElementNoLocal: 0->-1->0 1->-1->0 2->-1->0 "
        "3->-1->0 4->-1->0 5->-1->0 6->0->1 7->1->1 8->2->1 9->3->1 , "
        "getNodeNoLocal: 0->-28->0 1->-27->0 2->-26->0 3->-25->0 4->-24->0 "
        "5->-23->0 6->-22->0 7->-21->0 8->-20->0 9->-19->0 10->-18->0 "
        "11->-17->0 12->-16->0 13->-15->0 14->-14->0 15->-13->0 16->-12->0 "
        "17->-11->0 18->-10->0 19->-9->0 20->-8->0 21->-7->0 22->-6->0 "
        "23->-5->0 24->-4->0 25->-3->0 26->-2->0 27->-1->0 28->0->1 29->1->1 "
        "30->2->1 31->3->1 32->4->1 33->5->1 34->6->1 35->7->1 36->8->1 "
        "37->9->1 38->10->1 39->11->1 40->12->1 41->13->1 42->14->1 43->15->1 "
        "44->16->1 45->17->1 46->18->1 47->19->1 48->20->1 49->21->1 50->22->1 "
        "51->23->1 52->24->1 53->25->1 54->26->1 , getDofNoLocal: 0->-28->0 "
        "1->-27->0 2->-26->0 3->-25->0 4->-24->0 5->-23->0 6->-22->0 7->-21->0 "
        "8->-20->0 9->-19->0 10->-18->0 11->-17->0 12->-16->0 13->-15->0 "
        "14->-14->0 15->-13->0 16->-12->0 17->-11->0 18->-10->0 19->-9->0 "
        "20->-8->0 21->-7->0 22->-6->0 23->-5->0 24->-4->0 25->-3->0 26->-2->0 "
        "27->-1->0 28->0->1 29->1->1 30->2->1 31->3->1 32->4->1 33->5->1 "
        "34->6->1 35->7->1 36->8->1 37->9->1 38->10->1 39->11->1 40->12->1 "
        "41->13->1 42->14->1 43->15->1 44->16->1 45->17->1 46->18->1 47->19->1 "
        "48->20->1 49->21->1 50->22->1 51->23->1 52->24->1 53->25->1 54->26->1 "
        ", extractLocalNodesWithoutGhosts: "
        "[28,43,44,31,45,46,34,47,48,49,50,51,52,53,54,0,0,0,0,0,0,0,0,0,0,0,0,"
        "], extractLocalDofsWithoutGhosts: "
        "[28,43,44,31,45,46,34,47,48,49,50,51,52,53,54,0,0,0,0,0,0,0,0,0,0,0,0,"
        "], getSubMeshNoAndElementNoLocal: 0->0,0 1->0,1 2->1,0 3->1,1 , "
        "getSubMeshNoAndNodeNoLocal: 0->0,0 1->0,1 2->0,2 3->0,3 4->0,4 5->0,5 "
        "6->0,6 7->0,7 8->0,8 9->0,9 10->0,10 11->0,11 12->0,12 13->0,13 "
        "14->0,14 15->1,1 16->1,2 17->1,4 18->1,5 19->1,7 20->1,8 21->1,9 "
        "22->1,10 23->1,11 24->1,12 25->1,13 26->1,14 , getSubMeshesWithNodes: "
        "0->[<0,0> ] 1->[<0,1> ] 2->[<0,2> ] 3->[<0,3> ] 4->[<0,4> <1,0> ] "
        "5->[<0,5> ] 6->[<0,6> ] 7->[<0,7> ] 8->[<0,8> ] 9->[<0,9> <1,3> ] "
        "10->[<0,10> ] 11->[<0,11> ] 12->[<0,12> ] 13->[<0,13> ] 14->[<0,14> "
        "<1,6> ] 15->[<1,1> ] 16->[<1,2> ] 17->[<1,4> ] 18->[<1,5> ] "
        "19->[<1,7> ] 20->[<1,8> ] 21->[<1,9> ] 22->[<1,10> ] 23->[<1,11> ] "
        "24->[<1,12> ] 25->[<1,13> ] 26->[<1,14> ] ";
  }

  ASSERT_EQ(stringRespresentation, reference);
}

TEST(CompositeTest, Case1) {
  // run serial problem
  std::string pythonConfig = R"(

import sys
own_rank_no = (int)(sys.argv[-2])
n_ranks = (int)(sys.argv[-1])

print("n_ranks: {}".format(n_ranks))
print("own_rank_no: {}".format(own_rank_no))

meshes = {}
if own_rank_no == 0:

  # rank 0
  meshes = {
    "submesh0": {
      "nRanks": [1,2],
      "nElements": [3, 1],
      "inputMeshIsGlobal": False,
      "physicalExtent": [3.0, 1.0],
    },
    "submesh1": {
      "nRanks": [1,2],
      "nElements": [2, 1],
      "inputMeshIsGlobal": False,
      "physicalExtent": [2.0, 1.0],
      "physicalOffset": [3.0, 0.0],
    },
  }
else:

  # rank 1
  meshes = {
    "submesh0": {
      "nRanks": [1,2],
      "nElements": [3, 1],
      "inputMeshIsGlobal": False,
      "physicalExtent": [3.0, 1.0],
    },
    "submesh1": {
      "nRanks": [1,2],
      "nElements": [2, 1],
      "inputMeshIsGlobal": False,
      "physicalExtent": [2.0, 1.0],
      "physicalOffset": [3.0, 0.0],
    },
  }

config = {
  "Meshes": meshes,
  "FiniteElementMethod": {
    "inputMeshIsGlobal": False,

    "meshName": ["submesh0", "submesh1"],
  },
}

print(config)

)";

  DihuContext settings(argc, argv, pythonConfig);

  typedef SpatialDiscretization::FiniteElementMethod<
      Mesh::CompositeOfDimension<2>, BasisFunction::LagrangeOfOrder<2>,
      Quadrature::Gauss<1>, Equation::None>
      ProblemType;
  ProblemType problem(settings);

  problem.initialize();

  std::string stringRespresentation =
      problem.data().functionSpace()->meshPartition()->getString();
  std::cout << "stringRespresentation: \n" << stringRespresentation;

  std::string reference;

  if (DihuContext::ownRankNoCommWorld() == 0) {
    reference =
        "CompositeMesh, nSubMeshes: 2, removedSharedNodes: [, [1,0] -> [0,6] "
        "[1,5] -> [0,13] [1,10] -> [0,20] , ], nElementsLocal: 5, "
        "nElementsGlobal: 10, elementNoGlobalBegin: 0, nNodesSharedLocal: 2, "
        "nGhostNodesSharedLocal: 1, nRemovedNodesNonGhost: [0, 2, ], "
        "nNonDuplicateNodesWithoutGhosts: [14, 8, ], nNodesLocalWithoutGhosts: "
        "22, nNodesLocalWithGhosts: 33, nNodesGlobal: 55, "
        "nonDuplicateNodeNoGlobalBegin: 0, "
        "meshAndNodeNoLocalToNodeNoNonDuplicateGlobal: "
        "[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,25,26,27,28,],[-1,14,15,16,"
        "17,-1,18,19,20,21,-1,43,44,45,46,],], "
        "meshAndNodeNoLocalToNodeNoNonDuplicateLocal: "
        "[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,25,26,27,28,],[-1,14,15,16,"
        "17,-1,18,19,20,21,-1,29,30,31,32,],], isDuplicate: "
        "[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],[1,0,0,0,0,1,0,0,0,0,1,"
        "0,0,0,0,],], nodeNoNonDuplicateLocalToMeshAndDuplicateLocal: "
        "[<0,0>,<0,1>,<0,2>,<0,3>,<0,4>,<0,5>,<0,6>,<0,7>,<0,8>,<0,9>,<0,10>,<"
        "0,11>,<0,12>,<0,13>,<1,1>,<1,2>,<1,3>,<1,4>,<1,6>,<1,7>,<1,8>,<1,9>,<"
        "0,14>,<0,15>,<0,16>,<0,17>,<0,18>,<0,19>,<0,20>,<1,11>,<1,12>,<1,13>,<"
        "1,14>,], nonDuplicateGhostNodeNosGlobal: "
        "[22,23,24,25,26,27,28,43,44,45,46,], onlyNodalDofLocalNos: "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,], "
        "ghostDofNosGlobalPetsc: [22,23,24,25,26,27,28,43,44,45,46,], "
        "nElementsLocal(): 5, nElementsGlobal(): 10, nDofsLocalWithGhosts(): "
        "33, nDofsLocalWithoutGhosts(): 22, nDofsGlobal(): 55, "
        "nNodesLocalWithGhosts(): 33, nNodesLocalWithoutGhosts(): 22, "
        "nNodesGlobal(): 55, beginNodeGlobalPetsc(): 0, dofNosLocal(true): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,], "
        "dofNosLocal(false): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,29,30,31,32,], ghostDofNosGlobalPetsc(): "
        "[22,23,24,25,26,27,28,43,44,45,46,], getElementNoGlobalNatural: 0->0 "
        "1->1 2->2 3->6 4->7 , getNodeNoGlobalPetsc: 0->0 1->1 2->2 3->3 4->4 "
        "5->5 6->6 7->7 8->8 9->9 10->10 11->11 12->12 13->13 14->14 15->15 "
        "16->16 17->17 18->18 19->19 20->20 21->21 22->22 23->23 24->24 25->25 "
        "26->26 27->27 28->28 29->43 30->44 31->45 32->46 , "
        "getNodeNoGlobalNatural: 0,0->0 0,1->1 0,2->2 0,3->7 0,4->8 0,5->9 "
        "0,6->14 0,7->15 0,8->16 1,0->2 1,1->3 1,2->4 1,3->9 1,4->10 1,5->11 "
        "1,6->16 1,7->17 1,8->18 2,0->4 2,1->5 2,2->6 2,3->11 2,4->12 2,5->13 "
        "2,6->18 2,7->19 2,8->20 3,0->35 3,1->36 3,2->37 3,3->40 3,4->41 "
        "3,5->42 3,6->45 3,7->46 3,8->47 4,0->37 4,1->38 4,2->39 4,3->42 "
        "4,4->43 4,5->44 4,6->47 4,7->48 4,8->49 , getDofNoGlobalPetsc: "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,43,44,45,46,], getDofNoGlobalPetsc: 0->0 1->1 2->2 3->3 4->4 "
        "5->5 6->6 7->7 8->8 9->9 10->10 11->11 12->12 13->13 14->14 15->15 "
        "16->16 17->17 18->18 19->19 20->20 21->21 22->22 23->23 24->24 25->25 "
        "26->26 27->27 28->28 29->43 30->44 31->45 32->46 , getElementNoLocal: "
        "0->0->1 1->1->1 2->2->1 3->3->1 4->4->1 5->-1->0 6->-1->0 7->-1->0 "
        "8->-1->0 9->-1->0 , getNodeNoLocal: 0->0->1 1->1->1 2->2->1 3->3->1 "
        "4->4->1 5->5->1 6->6->1 7->7->1 8->8->1 9->9->1 10->10->1 11->11->1 "
        "12->12->1 13->13->1 14->14->1 15->15->1 16->16->1 17->17->1 18->18->1 "
        "19->19->1 20->20->1 21->21->1 22->22->0 23->23->0 24->24->0 25->25->0 "
        "26->26->0 27->27->0 28->28->0 29->29->0 30->30->0 31->31->0 32->32->0 "
        "33->33->0 34->34->0 35->35->0 36->36->0 37->37->0 38->38->0 39->39->0 "
        "40->40->0 41->41->0 42->42->0 43->43->0 44->44->0 45->45->0 46->46->0 "
        "47->47->0 48->48->0 49->49->0 50->50->0 51->51->0 52->52->0 53->53->0 "
        "54->54->0 , getDofNoLocal: 0->0->1 1->1->1 2->2->1 3->3->1 4->4->1 "
        "5->5->1 6->6->1 7->7->1 8->8->1 9->9->1 10->10->1 11->11->1 12->12->1 "
        "13->13->1 14->14->1 15->15->1 16->16->1 17->17->1 18->18->1 19->19->1 "
        "20->20->1 21->21->1 22->22->0 23->23->0 24->24->0 25->25->0 26->26->0 "
        "27->27->0 28->28->0 29->29->0 30->30->0 31->31->0 32->32->0 33->33->0 "
        "34->34->0 35->35->0 36->36->0 37->37->0 38->38->0 39->39->0 40->40->0 "
        "41->41->0 42->42->0 43->43->0 44->44->0 45->45->0 46->46->0 47->47->0 "
        "48->48->0 49->49->0 50->50->0 51->51->0 52->52->0 53->53->0 54->54->0 "
        ", extractLocalNodesWithoutGhosts: "
        "[0,14,15,16,17,5,18,19,20,21,10,11,12,13,0,0,0,0,0,0,0,0,], "
        "extractLocalDofsWithoutGhosts: "
        "[0,14,15,16,17,5,18,19,20,21,10,11,12,13,0,0,0,0,0,0,0,0,], "
        "getSubMeshNoAndElementNoLocal: 0->0,0 1->0,1 2->0,2 3->1,0 4->1,1 , "
        "getSubMeshNoAndNodeNoLocal: 0->0,0 1->0,1 2->0,2 3->0,3 4->0,4 5->0,5 "
        "6->0,6 7->0,7 8->0,8 9->0,9 10->0,10 11->0,11 12->0,12 13->0,13 "
        "14->1,1 15->1,2 16->1,3 17->1,4 18->1,6 19->1,7 20->1,8 21->1,9 "
        "22->0,14 23->0,15 24->0,16 25->0,17 26->0,18 27->0,19 28->0,20 "
        "29->1,10 30->1,11 31->1,12 32->1,13 , getSubMeshesWithNodes: "
        "0->[<0,0> ] 1->[<0,1> ] 2->[<0,2> ] 3->[<0,3> ] 4->[<0,4> ] 5->[<0,5> "
        "] 6->[<0,6> <1,0> ] 7->[<0,7> ] 8->[<0,8> ] 9->[<0,9> ] 10->[<0,10> ] "
        "11->[<0,11> ] 12->[<0,12> ] 13->[<0,13> <1,5> ] 14->[<1,1> ] "
        "15->[<1,2> ] 16->[<1,3> ] 17->[<1,4> ] 18->[<1,6> ] 19->[<1,7> ] "
        "20->[<1,8> ] 21->[<1,9> ] 22->[<0,14> ] 23->[<0,15> ] 24->[<0,16> ] "
        "25->[<0,17> ] 26->[<0,18> ] 27->[<0,19> ] 28->[<0,20> <1,10> ] "
        "29->[<1,10> ] 30->[<1,11> ] 31->[<1,12> ] 32->[<1,13> ] ";
  } else {
    reference =
        "CompositeMesh, nSubMeshes: 2, removedSharedNodes: [, [1,0] -> [0,6] "
        "[1,5] -> [0,13] [1,10] -> [0,20] , ], nElementsLocal: 5, "
        "nElementsGlobal: 10, elementNoGlobalBegin: 5, nNodesSharedLocal: 3, "
        "nGhostNodesSharedLocal: 0, nRemovedNodesNonGhost: [0, 3, ], "
        "nNonDuplicateNodesWithoutGhosts: [21, 12, ], "
        "nNodesLocalWithoutGhosts: 33, nNodesLocalWithGhosts: 33, "
        "nNodesGlobal: 55, nonDuplicateNodeNoGlobalBegin: 22, "
        "meshAndNodeNoLocalToNodeNoNonDuplicateGlobal: "
        "[[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,],[-"
        "1,43,44,45,46,-1,47,48,49,50,-1,51,52,53,54,],], "
        "meshAndNodeNoLocalToNodeNoNonDuplicateLocal: "
        "[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[-1,21,22,23,"
        "24,-1,25,26,27,28,-1,29,30,31,32,],], isDuplicate: "
        "[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],[1,0,0,0,0,1,0,0,0,0,1,"
        "0,0,0,0,],], nodeNoNonDuplicateLocalToMeshAndDuplicateLocal: "
        "[<0,0>,<0,1>,<0,2>,<0,3>,<0,4>,<0,5>,<0,6>,<0,7>,<0,8>,<0,9>,<0,10>,<"
        "0,11>,<0,12>,<0,13>,<0,14>,<0,15>,<0,16>,<0,17>,<0,18>,<0,19>,<0,20>,<"
        "1,1>,<1,2>,<1,3>,<1,4>,<1,6>,<1,7>,<1,8>,<1,9>,<1,11>,<1,12>,<1,13>,<"
        "1,14>,], nonDuplicateGhostNodeNosGlobal: [], onlyNodalDofLocalNos: "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,29,30,31,32,], ghostDofNosGlobalPetsc: [], nElementsLocal(): "
        "5, nElementsGlobal(): 10, nDofsLocalWithGhosts(): 33, "
        "nDofsLocalWithoutGhosts(): 33, nDofsGlobal(): 55, "
        "nNodesLocalWithGhosts(): 33, nNodesLocalWithoutGhosts(): 33, "
        "nNodesGlobal(): 55, beginNodeGlobalPetsc(): 22, dofNosLocal(true): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,29,30,31,32,], dofNosLocal(false): "
        "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,"
        "26,27,28,29,30,31,32,], ghostDofNosGlobalPetsc(): [], "
        "getElementNoGlobalNatural: 0->3 1->4 2->5 3->8 4->9 , "
        "getNodeNoGlobalPetsc: 0->22 1->23 2->24 3->25 4->26 5->27 6->28 7->29 "
        "8->30 9->31 10->32 11->33 12->34 13->35 14->36 15->37 16->38 17->39 "
        "18->40 19->41 20->42 21->43 22->44 23->45 24->46 25->47 26->48 27->49 "
        "28->50 29->51 30->52 31->53 32->54 , getNodeNoGlobalNatural: 0,0->14 "
        "0,1->15 0,2->16 0,3->21 0,4->22 0,5->23 0,6->28 0,7->29 0,8->30 "
        "1,0->16 1,1->17 1,2->18 1,3->23 1,4->24 1,5->25 1,6->30 1,7->31 "
        "1,8->32 2,0->18 2,1->19 2,2->20 2,3->25 2,4->26 2,5->27 2,6->32 "
        "2,7->33 2,8->34 3,0->45 3,1->46 3,2->47 3,3->50 3,4->51 3,5->52 "
        "3,6->55 3,7->56 3,8->57 4,0->47 4,1->48 4,2->49 4,3->52 4,4->53 "
        "4,5->54 4,6->57 4,7->58 4,8->59 , getDofNoGlobalPetsc: "
        "[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,"
        "45,46,47,48,49,50,51,52,53,54,], getDofNoGlobalPetsc: 0->22 1->23 "
        "2->24 3->25 4->26 5->27 6->28 7->29 8->30 9->31 10->32 11->33 12->34 "
        "13->35 14->36 15->37 16->38 17->39 18->40 19->41 20->42 21->43 22->44 "
        "23->45 24->46 25->47 26->48 27->49 28->50 29->51 30->52 31->53 32->54 "
        ", getElementNoLocal: 0->-1->0 1->-1->0 2->-1->0 3->-1->0 4->-1->0 "
        "5->0->1 6->1->1 7->2->1 8->3->1 9->4->1 , getNodeNoLocal: 0->-22->0 "
        "1->-21->0 2->-20->0 3->-19->0 4->-18->0 5->-17->0 6->-16->0 7->-15->0 "
        "8->-14->0 9->-13->0 10->-12->0 11->-11->0 12->-10->0 13->-9->0 "
        "14->-8->0 15->-7->0 16->-6->0 17->-5->0 18->-4->0 19->-3->0 20->-2->0 "
        "21->-1->0 22->0->1 23->1->1 24->2->1 25->3->1 26->4->1 27->5->1 "
        "28->6->1 29->7->1 30->8->1 31->9->1 32->10->1 33->11->1 34->12->1 "
        "35->13->1 36->14->1 37->15->1 38->16->1 39->17->1 40->18->1 41->19->1 "
        "42->20->1 43->21->1 44->22->1 45->23->1 46->24->1 47->25->1 48->26->1 "
        "49->27->1 50->28->1 51->29->1 52->30->1 53->31->1 54->32->1 , "
        "getDofNoLocal: 0->-22->0 1->-21->0 2->-20->0 3->-19->0 4->-18->0 "
        "5->-17->0 6->-16->0 7->-15->0 8->-14->0 9->-13->0 10->-12->0 "
        "11->-11->0 12->-10->0 13->-9->0 14->-8->0 15->-7->0 16->-6->0 "
        "17->-5->0 18->-4->0 19->-3->0 20->-2->0 21->-1->0 22->0->1 23->1->1 "
        "24->2->1 25->3->1 26->4->1 27->5->1 28->6->1 29->7->1 30->8->1 "
        "31->9->1 32->10->1 33->11->1 34->12->1 35->13->1 36->14->1 37->15->1 "
        "38->16->1 39->17->1 40->18->1 41->19->1 42->20->1 43->21->1 44->22->1 "
        "45->23->1 46->24->1 47->25->1 48->26->1 49->27->1 50->28->1 51->29->1 "
        "52->30->1 53->31->1 54->32->1 , extractLocalNodesWithoutGhosts: "
        "[22,43,44,45,46,27,47,48,49,50,32,51,52,53,54,37,38,39,40,41,42,0,0,0,"
        "0,0,0,0,0,0,0,0,0,], extractLocalDofsWithoutGhosts: "
        "[22,43,44,45,46,27,47,48,49,50,32,51,52,53,54,37,38,39,40,41,42,0,0,0,"
        "0,0,0,0,0,0,0,0,0,], getSubMeshNoAndElementNoLocal: 0->0,0 1->0,1 "
        "2->0,2 3->1,0 4->1,1 , getSubMeshNoAndNodeNoLocal: 0->0,0 1->0,1 "
        "2->0,2 3->0,3 4->0,4 5->0,5 6->0,6 7->0,7 8->0,8 9->0,9 10->0,10 "
        "11->0,11 12->0,12 13->0,13 14->0,14 15->0,15 16->0,16 17->0,17 "
        "18->0,18 19->0,19 20->0,20 21->1,1 22->1,2 23->1,3 24->1,4 25->1,6 "
        "26->1,7 27->1,8 28->1,9 29->1,11 30->1,12 31->1,13 32->1,14 , "
        "getSubMeshesWithNodes: 0->[<0,0> ] 1->[<0,1> ] 2->[<0,2> ] 3->[<0,3> "
        "] 4->[<0,4> ] 5->[<0,5> ] 6->[<0,6> <1,0> ] 7->[<0,7> ] 8->[<0,8> ] "
        "9->[<0,9> ] 10->[<0,10> ] 11->[<0,11> ] 12->[<0,12> ] 13->[<0,13> "
        "<1,5> ] 14->[<0,14> ] 15->[<0,15> ] 16->[<0,16> ] 17->[<0,17> ] "
        "18->[<0,18> ] 19->[<0,19> ] 20->[<0,20> <1,10> ] 21->[<1,1> ] "
        "22->[<1,2> ] 23->[<1,3> ] 24->[<1,4> ] 25->[<1,6> ] 26->[<1,7> ] "
        "27->[<1,8> ] 28->[<1,9> ] 29->[<1,11> ] 30->[<1,12> ] 31->[<1,13> ] "
        "32->[<1,14> ] ";
  }

  ASSERT_EQ(stringRespresentation, reference);
}
